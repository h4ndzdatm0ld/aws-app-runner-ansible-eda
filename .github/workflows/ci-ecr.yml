---
name: "CI-ECR"

on: # yamllint disable
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

  workflow_dispatch:

concurrency:
  group: test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    strategy:
      matrix:
        python-versions: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup environment"
        uses: "networktocode/gh-action-setup-poetry-environment@v2"
      - name: Lint
        run: poetry run flakeheaven lint .
      - name: Black
        run: poetry run black --check --diff .
      - name: Yamllint
        run: poetry run yamllint .
      - name: Pydocstyle
        run: poetry run pydocstyle .

  # build:
  #   name: "BUILD IMAGE"
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1 # More information on this action can be found below in the 'AWS Credentials' section
  #       with:
  #         role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
  #         aws-region: aws-region-1

  #     - name: Login to Amazon ECR Public
  #       id: login-ecr-public
  #       uses: aws-actions/amazon-ecr-login@v1
  #       with:
  #         registry-type: public

  #     - name: Build, tag, and push docker image to Amazon ECR Public
  #       env:
  #         REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
  #         REGISTRY_ALIAS: my-ecr-public-registry-alias
  #         REPOSITORY: my-ecr-public-repo
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
  #         docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
